body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  margin: 0;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  /* setting the main body of the HTML to "display:flex" and "flex-direction: column" in .CSS will allow the webpage to stack the content like header,
   content and footer vertically. This sets the stage for the HolyGrail web layout, where the page contents can be set to
    "flex-direction: row" while internally nesting in the contents of the page as a flex item within the body. */
  
}

a {
/* text-decoration: none; will remove the underlined text of links */
  text-decoration: none;
  font-size: 24px;
  color: rgb(255, 255, 255);
}

ul {

/* list-style: none; will remove the bullets on list items */
  list-style: none;
  padding: 0px;
  margin: 0px;
 

}


.header {
  height: 72px;
  background: darkmagenta;
  color: white;
  display: flex;
  align-items: center;
  font-weight: 900;
  font-size: 32px;
  padding: 0 8px;
  /* The header will automatically stick to the top of the wab page by default. See comment on ".body" about 
  ensuring the footer is stickied to the base of the browsing window properly. */
  
 
}

.body {
  display: flex;
  /* flex: 1; will keep the footer sticking to the bottom of the webpage, as it allows the 
  main body of the site to flex to maximumize the browser window whenever it's resized, keeping the footer pushed down. */
  flex: 1;
}


.footer {
  height: 72px;
  background: #eee;
  color: darkmagenta;
  display: flex;
  align-items: center;
  justify-content: center;
  /* use the above flex items and rules to center the text within the footer. */

}

.sidebar {
  flex-shrink: 0;
  background: royalblue;
  padding: 16px;
  /* flex-shrink determines how much the flex item will shrink relative to the rest of the flex items in the 
  flex container when there isnâ€™t enough space on the row.*/

}

.card {
  border: 1px solid #eee;
  box-shadow: 2px 4px 16px rgba(0,0,0,.06);
  border-radius: 4px;
  margin: 16px;
  padding: 16px;
  width: 300px;
  /* Styling of the floating cards in the ".container" or main viewing port on the webpage. */
  
}

.container {
  display: flex;
  flex-wrap: wrap;
  padding: 32px;
  /* flex-wrap: wrap; will allow the cards to resize with the browsing window and arrange them neatly much liek a game of solitaire. */
}

li {
  margin-bottom: 16px;
  /* margin-bottom will create space between the list links and make them look neater. */
}

